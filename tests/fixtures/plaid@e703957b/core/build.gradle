/*
 * Copyright 2018 Google LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply from: '../shared_dependencies.gradle'
apply from: '../test_dependencies.gradle'

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        buildConfigField 'String', 'DESIGNER_NEWS_CLIENT_ID', "\"${designer_news_client_id}\""
        buildConfigField 'String',
                'DESIGNER_NEWS_CLIENT_SECRET', "\"${designer_news_client_secret}\""

        buildConfigField 'String',
                'PRODUCT_HUNT_DEVELOPER_TOKEN', "\"${product_hunt_developer_token}\""

        javaCompileOptions {
            annotationProcessorOptions {
                arguments << ['room.incremental': 'true']
            }
        }
    }

    dataBinding {
        enabled true
    }

    buildTypes {
        release {
            consumerProguardFiles 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    packagingOptions {
        exclude 'META-INF/core_debug.kotlin_module'
    }
}

dependencies {
    implementation project(':bypass')
    implementation "com.google.code.gson:gson:${versions.gson}"
    implementation "androidx.browser:browser:${versions.androidx}"
    implementation "androidx.room:room-runtime:${versions.room}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}"
    implementation "com.android.support:palette-v7:${versions.supportLibrary}"
    implementation "com.android.support:support-dynamic-animation:${versions.supportLibrary}"
    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
    implementation "org.jsoup:jsoup:${versions.jsoup}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"
    kapt "com.github.bumptech.glide:compiler:${versions.glide}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    kapt "androidx.annotation:annotation:${versions.androidx}"
}

androidExtensions {
    experimental = true
}
